// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © LvNThL

//@version=6
indicator("Preset Trades", overlay = true)

_entry = input.price(0.00, "Entry", confirm = true)
_trail = input.float(0, "Trailing Stop Loss", minval = 0, step = 0.0001)
_profit = input.float(2, "Profit %", minval = 0, step = 0.25)
_boxwidth = input.int(60, "Box Width", minval = 2, maxval = 4995, step = 1)

_short = input.bool(false, "Short Trade?")
_onlystop = input.bool(false, "View Only Stop-Loss?")
_phone = input.bool(true, "Phone Mode")
_extend = input.bool(false, "Extend?")

string _typeStop = input.string("2:1", "Stop Ratio", ["30:1", "25:1", "20:1", "15:1", "14:1", "13:1", "12:1", "11:1", "10:1", "9:1", "8:1", "7:1", "6:1", "5:1", "4:1", "3:1", "2:1", "1.75:1", "1.5:1", "1.25:1", "1:1"])

stop(source, type) =>
    switch type
        "30:1" => _short ? (_profit / 30 / 100) + 1 : (-_profit / 30 / 100) + 1
        "25:1" => _short ? (_profit / 25 / 100) + 1 : (-_profit / 25 / 100) + 1
        "20:1" => _short ? (_profit / 20 / 100) + 1 : (-_profit / 20 / 100) + 1
        "15:1" => _short ? (_profit / 15 / 100) + 1 : (-_profit / 15 / 100) + 1
        "14:1" => _short ? (_profit / 14 / 100) + 1 : (-_profit / 14 / 100) + 1
        "13:1" => _short ? (_profit / 13 / 100) + 1 : (-_profit / 13 / 100) + 1
        "12:1" => _short ? (_profit / 12 / 100) + 1 : (-_profit / 12 / 100) + 1
        "11:1" => _short ? (_profit / 11 / 100) + 1 : (-_profit / 11 / 100) + 1

        "10:1" => _short ? (_profit / 10 / 100) + 1 : (-_profit / 10 / 100) + 1
        "9:1" => _short ? (_profit / 9 / 100) + 1 : (-_profit / 9 / 100) + 1
        "8:1" => _short ? (_profit / 8 / 100) + 1 : (-_profit / 8 / 100) + 1
        "7:1" => _short ? (_profit / 7 / 100) + 1 : (-_profit / 7 / 100) + 1
        "6:1" => _short ? (_profit / 6 / 100) + 1 : (-_profit / 6 / 100) + 1
        "5:1" => _short ? (_profit / 5 / 100) + 1 : (-_profit / 5 / 100) + 1
        "4:1" => _short ? (_profit / 4 / 100) + 1 : (-_profit / 4 / 100) + 1
        "3:1" => _short ? (_profit / 3 / 100) + 1 : (-_profit / 3 / 100) + 1
        "2:1" => _short ? (_profit / 2 / 100) + 1 : (-_profit / 2 / 100) + 1
        "1.75:1" => _short ? (_profit / 1.75 / 100) + 1 : (-_profit / 1.75 / 100) + 1
        "1.5:1" => _short ? (_profit / 1.5 / 100) + 1 : (-_profit / 1.5 / 100) + 1
        "1.25:1" => _short ? (_profit / 1.25 / 100) + 1 : (-_profit / 1.25 / 100) + 1
        "1:1" => _short ? (_profit / 1 / 100) + 1 : (-_profit / 1 / 100) + 1

_p = _short ? (-_profit / 100) + 1 : (_profit / 100) + 1

_s = stop(_profit, _typeStop)

_pcalc = (_entry * _p)
_scalc = (_entry * _s)


var label _trendlbl1 = na
var label _trendlbl2 = na
var label _lbl1 = na
var label _lbl2 = na
var label _lbl3 = na
var label _lbl4 = na
var label _lbl5 = na
var label _lbl6 = na

var line _line1 = na
var line _line2 = na
var line _line3 = na 

var box _box1 = na
var box _box2 = na

_hightracker = ta.highest(high, _boxwidth)
_lowtracker = ta.lowest(low, _boxwidth)

if _entry > 0

    _box1 := box.new(bar_index + _boxwidth, _short ? _entry : _pcalc, bar_index - _boxwidth, _short ? _scalc : _entry, extend = _extend ? extend.both : extend.none, border_color = _onlystop and not _short == true ? color.rgb(0, 0, 0, 100) : _short ? color.new(#af00ff, 0) : color.new(#00ff80, 0), border_width = 2, bgcolor = _short ? color.new(#af00ff, 98) : color.new(#00ff80, 98))
    box.delete(_box1[1])

    _box2 := box.new(bar_index + _boxwidth, _short ? _pcalc : _entry, bar_index - _boxwidth, _short ? _entry : _scalc, extend = _extend ? extend.both : extend.none, border_color = _short and _onlystop == true ? color.rgb(0, 0, 0, 100) : _short ? color.new(#00ff80, 0) : color.new(#af00ff, 0), border_width = 2, bgcolor = _short ? color.new(#00ff80, 98) : color.new(#af00ff, 98))
    box.delete(_box2[1])

    _line1 := line.new(bar_index, close, bar_index - _boxwidth, _entry, extend = extend.none, color = color.new(#908f9d, 0), style = line.style_dashed, width = 1)
    line.delete(_line1[1])
    _lbl1 := label.new(bar_index + _boxwidth, _entry, str.tostring(_entry, "#.###"), color = color.rgb(0, 0, 0, 100), style = _extend ? label.style_label_down : label.style_label_left, size = _phone ? size.normal : size.large)
    label.delete(_lbl1[1])
    _lbl2 := label.new(bar_index + _boxwidth, _scalc, str.tostring(_scalc, "#.###"), color = color.rgb(0, 0, 0, 100), style = _extend ? label.style_label_up : label.style_label_left, size = _phone ? size.normal : size.large)
    label.delete(_lbl2[1])
    _lbl3 := _onlystop == false ? label.new(bar_index + _boxwidth, _pcalc, str.tostring(_pcalc, "#.###"), color = color.rgb(0, 0, 0, 100), style = _extend ? label.style_label_down : label.style_label_left, size = _phone ? size.normal : size.large) : na
    label.delete(_lbl3[1])

if _trail > 0 

    _line2 := line.new(bar_index + _boxwidth, _trail, bar_index - _boxwidth, _trail, extend = _extend ? extend.both : extend.none, color = color.rgb(255, 0, 0), style = line.style_solid, width = 2)
    line.delete(_line2[1])
    _lbl4 := label.new(bar_index + _boxwidth, _trail, str.tostring(_trail, "#.###"), color = color.rgb(0, 0, 0, 100), style = label.style_label_left, size = _phone ? size.normal : size.large)
    label.delete(_lbl4[1])

_line3 := line.new(bar_index, close, bar_index + _boxwidth, close, extend = extend.none, color = color.new(#908f9d, 0), style = line.style_dotted, width = 1)
line.delete(_line3[1])

//HIGH LABEL
periodHigh = _hightracker
periodLow = _lowtracker
barsback1=0
barsback2=0
for i = 0 to _boxwidth
    barsback1 := periodHigh == high[i] ? i : barsback1
    barsback2 := periodLow == low[i] ? i : barsback2
h = high[barsback1]
l = low[barsback2]

_trendlbl1 := label.new(bar_index + _boxwidth, close, str.tostring((close / _entry) - 1 , "#.###%"), color = color.new(#00ff80, 67), style = _extend ? label.style_label_down : label.style_label_left, size = _phone ? size.normal : size.large)
label.delete(_trendlbl1[1])
// _trendlbl2 := label.new(bar_index - _boxwidth, close, str.tostring((close/ _hightracker) - 1, "#.###%") + "\n\n" + str.tostring((close/ _lowtracker) - 1, "#.###%"), color = color.new(#af00ff, 50), style = _extend ? label.style_label_down : label.style_label_right, size = _phone ? size.normal : size.large)
// label.delete(_trendlbl2[1])

// _lbl5 := label.new(bar_index-barsback1, h, str.tostring(h, '######.#####') + "   " + str.tostring((close/ _hightracker) - 1, "#.###%"), color = color.new(#af00ff, 50), style = label.style_label_down, size = _phone ? size.normal : size.large)
// label.delete(_lbl5[1])
// _lbl6 := label.new(bar_index-barsback2, l, str.tostring(l, '######.#####') + "   " + str.tostring((close/ _lowtracker) - 1, "#.###%"), color = color.new(#00ff80, 67) , style = label.style_label_up, size = _phone ? size.normal : size.large)
// label.delete(_lbl6[1])
